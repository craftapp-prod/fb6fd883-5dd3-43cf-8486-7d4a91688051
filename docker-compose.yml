x-defaults: &defaults
  PROJECT_NAME: 'medium-plan'
  HOST_IP: ''
services:
  postgres:
    networks:
      - app-network
    env_file:
      - ./backend/.env
    image: postgres:15-alpine
    cgroup_parent: '${PROJECT_NAME}.slice'
    environment:
      POSTGRES_USER: '${DB_USER}'
      POSTGRES_PASSWORD: '${DB_PASSWORD}'
      POSTGRES_DB: '${DB_NAME}'
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./devops/init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
    restart: unless-stopped
    labels:
      - 'com.docker.compose.project.resource-control=true'

  backend:
    networks:
      - app-network
    build: ./backend
    cgroup_parent: '${PROJECT_NAME}.slice'
    volumes:
      - ./backend/.env:/app/.env
    env_file:
      - ./backend/.env
    depends_on:
      - postgres
    restart: unless-stopped
    #environment:
    # DB_HOST: "postgresql://${DB_USER}:${DB_PASSWORD}@postgres:5432/${DB_NAME}"
    # FRONTEND_DOMAIN: "http://54.236.65.244:3000"
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:8000/health']
      interval: 30s
      timeout: 10s
      retries: 3
    labels:
      - 'com.docker.compose.project.resource-control=true'
  frontend:
    networks:
      - app-network
    build: ./frontend
    cgroup_parent: '${PROJECT_NAME}.slice'
    env_file:
      - ./frontend/.env
    depends_on:
      - backend
    restart: unless-stopped
    # environment:
    #   NEXT_PUBLIC_API_URL: "http://54.236.65.244:8000"
    # NEXT_PUBLIC_EXTERNAL_API_URL: "http://${HOST_IP}:8000" # For browser access

    labels:
      - 'com.docker.compose.project.resource-control=true'

volumes:
  postgres_data:
    driver: local
    driver_opts:
      type: none
      device: /opt/${PROJECT_NAME}/postgres-data
      o: bind
    labels:
      - 'com.docker.compose.volume.size=10GB'
networks:
  app-network:
    driver: bridge
